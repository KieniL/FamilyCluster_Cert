/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.kienast.certservice.rest.api;

import java.util.List;

import javax.validation.Valid;

import com.kienast.certservice.rest.api.model.CertificationModel;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@Validated
@Api(value = "cert", description = "the cert API")
public interface CertApi {

    @ApiOperation(value = "add an Certification", nickname = "addCertifaction", notes = "", response = CertificationModel.class, tags={ "cert", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Schemas", response = CertificationModel.class),
        @ApiResponse(code = 400, message = "Bad Request") })
    @RequestMapping(value = "/cert",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<CertificationModel> addCertifaction(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CertificationModel certificationModel);


    @ApiOperation(value = "get Certification", nickname = "getCertification", notes = "", response = CertificationModel.class, tags={ "cert", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Schemas", response = CertificationModel.class) })
    @RequestMapping(value = "/cert/{shortname}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CertificationModel> getCertification(@ApiParam(value = "the shortname of the certification",required=true) @PathVariable("shortname") String shortname);


    @ApiOperation(value = "get Certifications", nickname = "getCertifications", notes = "", response = CertificationModel.class, responseContainer = "List", tags={ "cert", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Schemas", response = CertificationModel.class, responseContainer = "List") })
    @RequestMapping(value = "/cert",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<CertificationModel>> getCertifications();

}
